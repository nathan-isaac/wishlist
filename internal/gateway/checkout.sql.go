// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: checkout.sql

package gateway

import (
	"context"
	"time"
)

const createCheckout = `-- name: CreateCheckout :exec
INSERT INTO checkout (id, wishlist_id, created_at, updated_at)
VALUES (?, ?, ?, ?)
`

type CreateCheckoutParams struct {
	ID         string
	WishlistID string
	CreatedAt  time.Time
	UpdatedAt  time.Time
}

func (q *Queries) CreateCheckout(ctx context.Context, arg CreateCheckoutParams) error {
	_, err := q.db.ExecContext(ctx, createCheckout,
		arg.ID,
		arg.WishlistID,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const createCheckoutItem = `-- name: CreateCheckoutItem :exec
INSERT INTO checkout_item (id, checkout_id, wishlist_item_id, quantity, created_at, updated_at)
VALUES (?, ?, ?, ?, ?, ?)
`

type CreateCheckoutItemParams struct {
	ID             string
	CheckoutID     string
	WishlistItemID string
	Quantity       int64
	CreatedAt      time.Time
	UpdatedAt      time.Time
}

func (q *Queries) CreateCheckoutItem(ctx context.Context, arg CreateCheckoutItemParams) error {
	_, err := q.db.ExecContext(ctx, createCheckoutItem,
		arg.ID,
		arg.CheckoutID,
		arg.WishlistItemID,
		arg.Quantity,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const createCheckoutResponse = `-- name: CreateCheckoutResponse :exec
INSERT INTO checkout_response (id, checkout_id, name, address_line_one, address_line_two, city, state, zip, message, created_at, updated_at)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`

type CreateCheckoutResponseParams struct {
	ID             string
	CheckoutID     string
	Name           string
	AddressLineOne string
	AddressLineTwo string
	City           string
	State          string
	Zip            string
	Message        string
	CreatedAt      time.Time
	UpdatedAt      time.Time
}

func (q *Queries) CreateCheckoutResponse(ctx context.Context, arg CreateCheckoutResponseParams) error {
	_, err := q.db.ExecContext(ctx, createCheckoutResponse,
		arg.ID,
		arg.CheckoutID,
		arg.Name,
		arg.AddressLineOne,
		arg.AddressLineTwo,
		arg.City,
		arg.State,
		arg.Zip,
		arg.Message,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}
